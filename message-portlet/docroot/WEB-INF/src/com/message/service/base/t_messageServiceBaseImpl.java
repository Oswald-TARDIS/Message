/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.message.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.message.model.t_message;

import com.message.service.persistence.t_messagePersistence;
import com.message.service.persistence.t_studentPersistence;
import com.message.service.persistence.t_teacherPersistence;
import com.message.service.t_messageService;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the t_message remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.message.service.impl.t_messageServiceImpl}.
 * </p>
 *
 * @author mazhe
 * @see com.message.service.impl.t_messageServiceImpl
 * @see com.message.service.t_messageServiceUtil
 * @generated
 */
public abstract class t_messageServiceBaseImpl extends BaseServiceImpl
	implements t_messageService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.message.service.t_messageServiceUtil} to access the t_message remote service.
	 */

	/**
	 * Returns the t_message local service.
	 *
	 * @return the t_message local service
	 */
	public com.message.service.t_messageLocalService gett_messageLocalService() {
		return t_messageLocalService;
	}

	/**
	 * Sets the t_message local service.
	 *
	 * @param t_messageLocalService the t_message local service
	 */
	public void sett_messageLocalService(
		com.message.service.t_messageLocalService t_messageLocalService) {
		this.t_messageLocalService = t_messageLocalService;
	}

	/**
	 * Returns the t_message remote service.
	 *
	 * @return the t_message remote service
	 */
	public com.message.service.t_messageService gett_messageService() {
		return t_messageService;
	}

	/**
	 * Sets the t_message remote service.
	 *
	 * @param t_messageService the t_message remote service
	 */
	public void sett_messageService(
		com.message.service.t_messageService t_messageService) {
		this.t_messageService = t_messageService;
	}

	/**
	 * Returns the t_message persistence.
	 *
	 * @return the t_message persistence
	 */
	public t_messagePersistence gett_messagePersistence() {
		return t_messagePersistence;
	}

	/**
	 * Sets the t_message persistence.
	 *
	 * @param t_messagePersistence the t_message persistence
	 */
	public void sett_messagePersistence(
		t_messagePersistence t_messagePersistence) {
		this.t_messagePersistence = t_messagePersistence;
	}

	/**
	 * Returns the t_student local service.
	 *
	 * @return the t_student local service
	 */
	public com.message.service.t_studentLocalService gett_studentLocalService() {
		return t_studentLocalService;
	}

	/**
	 * Sets the t_student local service.
	 *
	 * @param t_studentLocalService the t_student local service
	 */
	public void sett_studentLocalService(
		com.message.service.t_studentLocalService t_studentLocalService) {
		this.t_studentLocalService = t_studentLocalService;
	}

	/**
	 * Returns the t_student remote service.
	 *
	 * @return the t_student remote service
	 */
	public com.message.service.t_studentService gett_studentService() {
		return t_studentService;
	}

	/**
	 * Sets the t_student remote service.
	 *
	 * @param t_studentService the t_student remote service
	 */
	public void sett_studentService(
		com.message.service.t_studentService t_studentService) {
		this.t_studentService = t_studentService;
	}

	/**
	 * Returns the t_student persistence.
	 *
	 * @return the t_student persistence
	 */
	public t_studentPersistence gett_studentPersistence() {
		return t_studentPersistence;
	}

	/**
	 * Sets the t_student persistence.
	 *
	 * @param t_studentPersistence the t_student persistence
	 */
	public void sett_studentPersistence(
		t_studentPersistence t_studentPersistence) {
		this.t_studentPersistence = t_studentPersistence;
	}

	/**
	 * Returns the t_teacher local service.
	 *
	 * @return the t_teacher local service
	 */
	public com.message.service.t_teacherLocalService gett_teacherLocalService() {
		return t_teacherLocalService;
	}

	/**
	 * Sets the t_teacher local service.
	 *
	 * @param t_teacherLocalService the t_teacher local service
	 */
	public void sett_teacherLocalService(
		com.message.service.t_teacherLocalService t_teacherLocalService) {
		this.t_teacherLocalService = t_teacherLocalService;
	}

	/**
	 * Returns the t_teacher remote service.
	 *
	 * @return the t_teacher remote service
	 */
	public com.message.service.t_teacherService gett_teacherService() {
		return t_teacherService;
	}

	/**
	 * Sets the t_teacher remote service.
	 *
	 * @param t_teacherService the t_teacher remote service
	 */
	public void sett_teacherService(
		com.message.service.t_teacherService t_teacherService) {
		this.t_teacherService = t_teacherService;
	}

	/**
	 * Returns the t_teacher persistence.
	 *
	 * @return the t_teacher persistence
	 */
	public t_teacherPersistence gett_teacherPersistence() {
		return t_teacherPersistence;
	}

	/**
	 * Sets the t_teacher persistence.
	 *
	 * @param t_teacherPersistence the t_teacher persistence
	 */
	public void sett_teacherPersistence(
		t_teacherPersistence t_teacherPersistence) {
		this.t_teacherPersistence = t_teacherPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return t_message.class;
	}

	protected String getModelClassName() {
		return t_message.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = t_messagePersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.message.service.t_messageLocalService.class)
	protected com.message.service.t_messageLocalService t_messageLocalService;
	@BeanReference(type = com.message.service.t_messageService.class)
	protected com.message.service.t_messageService t_messageService;
	@BeanReference(type = t_messagePersistence.class)
	protected t_messagePersistence t_messagePersistence;
	@BeanReference(type = com.message.service.t_studentLocalService.class)
	protected com.message.service.t_studentLocalService t_studentLocalService;
	@BeanReference(type = com.message.service.t_studentService.class)
	protected com.message.service.t_studentService t_studentService;
	@BeanReference(type = t_studentPersistence.class)
	protected t_studentPersistence t_studentPersistence;
	@BeanReference(type = com.message.service.t_teacherLocalService.class)
	protected com.message.service.t_teacherLocalService t_teacherLocalService;
	@BeanReference(type = com.message.service.t_teacherService.class)
	protected com.message.service.t_teacherService t_teacherService;
	@BeanReference(type = t_teacherPersistence.class)
	protected t_teacherPersistence t_teacherPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private t_messageServiceClpInvoker _clpInvoker = new t_messageServiceClpInvoker();
}